---
name: validate YAML files

on:
    push:
        branches:
            - '**'
            - '!**release**'
        tags-ignore:
            # I tag release pushes but those should have already been tested
            - 'release-*'
        paths:
            - 'cpansa/**.yml'
            - 'external_reports/**.yml'
            - '.github/workflows/**.yml'
    pull_request:
        branches:
            - '**'
        paths:
            - 'cpansa/**.yml'
            - 'external_reports/**.yml'
            - '.github/workflows/**.yml'

# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/using-concurrency
concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref || github.run_id }}
    cancel-in-progress: true

jobs:
    yaml:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: 'yamllint on cpansa'
              uses: karancode/yamllint-github-action@master
              with:
                  yamllint_file_or_dir: 'cpansa'
                  yamllint_strict: false
                  yamllint_comment: true
                  yamllint_config_filepath: xt/yamllint.config
              env:
                  YAMLLINT_CONFIG_FILE: xt/yamllint.config
            - name: 'yamllint on external_reports'
              uses: karancode/yamllint-github-action@master
              with:
                  yamllint_file_or_dir: 'external_reports'
                  yamllint_strict: false
                  yamllint_comment: true
                  yamllint_config_filepath: xt/yamllint.config
              env:
                  YAMLLINT_CONFIG_FILE: xt/yamllint.config
    lint:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os:
                    - ubuntu-latest
                perl-version:
                    - 'latest'
        container:
            image: perl:${{ matrix.perl-version }}
        steps:
            - uses: actions/checkout@v3
            - name: Load cache
              id: perl-modules-cache-restore
              uses: actions/cache/restore@v4
              with:
                key: validate-${{ runner.os }}-${{ matrix.perl-version }}-modules
                path: |
                  /usr/local/lib/perl5
            - name: 'setup'
              run: |
                cpan -T Mojo::Util Term::ANSIColor YAML::XS IO::Interactive MetaCPAN::Client YAML CPAN::Audit Data::Rx
            - name: "Lint reports"
              run: |
                env PERL5LIB=./lib make -f Makefile.repo invert
                perl util/lint_reports
            - name: Save cache
              id: perl-modules-cache-save
              uses: actions/cache/save@v4
              if: always()
              with:
                key: ${{ steps.perl-modules-cache-restore.outputs.cache-primary-key }}
                path: |
                  /usr/local/lib/perl5
