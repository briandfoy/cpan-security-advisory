#!/Users/brian/bin/perl
use v5.34;
use utf8;
use open qw(:std :utf8);

use Mojo::Util qw(dumper);
use Term::ANSIColor;
use YAML::XS   qw(LoadFile);

my $url = "https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=perl";

my %Ignore;

my $ignore_file = 'IGNORE_CVEs';
if( -e $ignore_file) {
	open my $fh, '<', $ignore_file;

	%Ignore =
		map { $_, 1 }
		map { m/(CVE-\d+-\d+)/a }
		<$fh>;
	}

my %Seen;
foreach my $file ( glob('cpansa/*.yml' ) ) {
	local $@;
	my $rc = eval {
		my @keys = map { $_->{cves}->@* } grep { exists $_->{cves} } LoadFile($file)->{advisories}->@*;
		@Seen{@keys} = (1) x @keys;
		1;
		};
	if( ! defined $rc ) {
		warn "$file: $@\n";
		}
	}

my %Count;
use Mojo::UserAgent;
my $tx = Mojo::UserAgent
	->new->get($url)
	->res
	->dom->find( 'div#TableWithRules table tr' )
	->map( sub {
		my $dom = $_;
		my $array = $dom->find( 'td' )->map( sub {
			my $text =  $_->all_text;
			$text =~ s/\v+/ /gr;
			} )->to_array;

		$array->[1] = substr( $array->[-1], 0, 70 ) . '...';
		$array;
		} )
	->reverse
	->grep( sub { length $_->[0] } ) # first is a header row
	->each( sub {
		my $cve = $_->[0];
		my( $mark, $color ) = do {
			   if( exists $Seen{$cve}   ) { ( 'âœ”', 'bold green' )  }
			elsif( exists $Ignore{$cve} ) { ('*', 'red' ) }
			else { ( '?', 'bold cyan' ) }
			};
		$Count{$mark}++;
		print colored(
			[ $color ],
			sprintf "%s  %-17s %s\n", $mark, $_->@*
			);
		} )
	;

say dumper(\%Count);
__DATA__
